---
export function getStaticPaths() {
  return [
    {params: {lang: 'en'}},
    {params: {lang: 'id'}},
  ];
}

// Component Imports
import BaseHead from '../components/BaseHead.astro';
import BlogHeader from '../components/BlogHeader.astro';
import BlogPostPreview from '../components/BlogPostPreview.astro';
import {getTranslations} from '../langs/translations.js';

// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.
let title = 'Title';
let description = 'The perfect starter for your perfect blog.';
let permalink = 'https://example.com/';

// Data Fetching: List all Markdown posts in the repo.
let lang = Astro.canonicalURL.pathname.split('/')[1];
let trans = getTranslations(lang)

let allPosts
switch (lang) {
	case "id":
		allPosts = await Astro.glob("./id/posts/*.md");
		break;
	default: 
		allPosts = await Astro.glob("./en/posts/*.md");
		break;
}

allPosts = allPosts.sort((a, b) => new Date(b.frontmatter.publishDate).valueOf() - new Date(a.frontmatter.publishDate).valueOf());
for(let i = 0; i < 3; i ++){
	allPosts.push(...allPosts)
}


// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/

---

<html lang={lang}>
	<head>
		<BaseHead {title} {description} {permalink} />
	</head>

	<body>
		<BlogHeader />
		
		<div class="wrapper">
			<main class="content mb-80">
				<section class="mb-8 border-b-2 border-blue py-8">
					<h1 class="font-bold text-5xl">{trans.index.welcome}</h1>
					<h2 class="">{trans.index.subtitle}</h2>
				</section>
				<section class="grid gap-x-4 gap-y-6 grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
					{allPosts.map((p) => <BlogPostPreview post={p} />)}
				</section>
			</main>
		</div>
	</body>
</html>
